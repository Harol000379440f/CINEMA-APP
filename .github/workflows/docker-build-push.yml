name: Construir, Probar y Empujar Imagen Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        # Clona el repositorio de forma completa para asegurar que se tengan todos los archivos necesarios.

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
        # Establece la versión de Node.js para el entorno de ejecución

      - name: Instalar dependencias
        run: npm install
        # Instala las dependencias del proyecto según el package.json

      - name: Ejecutar pruebas unitarias
        run: npm test
        # Ejecuta las pruebas unitarias definidas en el script "test" de package.json

      - name: Analizar vulnerabilidades en la imagen Docker
        uses: aquasecurity/trivy-action@v2  # Asegúrate de usar la versión correcta y compatible
        with:
          image-ref: $DOCKER_USERNAME/cinema-app:latest
          scan-type: image
          fail-threshold: high
        # Escanea la imagen Docker en busca de vulnerabilidades usando Trivy.
        # Falla la ejecución si se encuentran vulnerabilidades de alto riesgo.

      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Autentica en Docker Hub para poder empujar la imagen

      - name: Construir imagen Docker
        run: |
          docker build -t $DOCKER_USERNAME/cinema-app:latest .
        # Construye la imagen Docker a partir del Dockerfile en el directorio actual

      - name: Empujar imagen Docker
        run: |
          docker push $DOCKER_USERNAME/cinema-app:latest
        # Empuja la imagen Docker construida al registro de Docker Hub