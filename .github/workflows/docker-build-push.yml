name: Build and Push Docker Image # Workflow name

# Trigger workflow on pushes to the main branch
on: 
  push:
    branches:
      - main

jobs: 
  build-and-push: # Job to build and push Docker image
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Normalize and Build Docker Image
      - name: Build Docker Image
        run: |
          # Convert Docker username to lowercase (for consistency)
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          docker build -t $DOCKER_USERNAME/cinema-app:latest .

      # Step 4: Push Docker Image
      - name: Push Docker Image
        run: |
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          docker push $DOCKER_USERNAME/cinema-app:latest

      # Step 5: Unit Tests for Docker Workflow
      - name: Unit Test Docker Workflow
        run: |
          echo "Running pipeline tests..."
          # Test: Ensure DOCKER_USERNAME is non-empty and lowercase
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          if [ -z "$DOCKER_USERNAME" ]; then
            echo "Error: DOCKER_USERNAME is empty"
            exit 1
          fi
          if [ "$DOCKER_USERNAME" != "$(echo "$DOCKER_USERNAME" | tr '[:upper:]' '[:lower:]')" ]; then
            echo "Error: DOCKER_USERNAME is not lowercase"
            exit 1
          fi
          echo "DOCKER_USERNAME validation passed"

          # Test: Validate Docker image build
          docker images | grep "$DOCKER_USERNAME/cinema-app:latest" > /dev/null
          if [ $? -ne 0 ]; then
            echo "Error: Docker image not built successfully"
            exit 1
          fi
          echo "Docker image build validation passed"

          # Test: Validate Docker image push (mock)
          echo "Validating Docker push with mock test..."
          MOCK_PUSH_RESULT=0  # Simulate a successful push
          if [ $MOCK_PUSH_RESULT -ne 0 ]; then
            echo "Error: Docker image push failed"
            exit 1
          fi
          echo "Docker push validation passed"