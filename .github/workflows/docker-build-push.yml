nname: Build and Push Docker Image # Workflow name

on: 
  push:
    branches:
      - main

jobs: 
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Normalize and Build Docker Image
      - name: Build Docker Image
        run: |
          echo "Starting Docker build..."
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          echo "Using Docker username: $DOCKER_USERNAME"

          # Build the Docker image
          docker build -t $DOCKER_USERNAME/cinema-app:latest .
          echo "Docker build completed."

          # List Docker images for debugging
          echo "Listing Docker images..."
          docker images

      # Step 4: Push Docker Image
      - name: Push Docker Image
        run: |
          echo "Starting Docker push..."
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          docker push $DOCKER_USERNAME/cinema-app:latest
          echo "Docker push completed."

      # Step 5: Unit Tests for Docker Workflow
      - name: Unit Test Docker Workflow
        run: |
          echo "Running pipeline tests..."

          # Test 1: Ensure DOCKER_USERNAME is non-empty and lowercase
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          if [ -z "$DOCKER_USERNAME" ]; then
            echo "Error: DOCKER_USERNAME is empty"
            exit 1
          fi
          if [ "$DOCKER_USERNAME" != "$(echo "$DOCKER_USERNAME" | tr '[:upper:]' '[:lower:]')" ]; then
            echo "Error: DOCKER_USERNAME is not lowercase"
            exit 1
          fi
          echo "DOCKER_USERNAME validation passed"

          # Test 2: Validate Docker image build using docker inspect
          echo "Validating Docker image build..."
          docker inspect --type=image "$DOCKER_USERNAME/cinema-app:latest" > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "Error: Docker image $DOCKER_USERNAME/cinema-app:latest not found"
            exit 1
          fi
          echo "Docker image build validation passed"

          # Test 3: Validate Docker image push (mock test for debugging)
          echo "Validating Docker push (mock test)..."
          MOCK_PUSH_RESULT=0  # Simulate a successful push
          if [ $MOCK_PUSH_RESULT -ne 0 ]; then
            echo "Error: Docker image push failed"
            exit 1
          fi
          echo "Docker push validation passed"

          # Final check
          echo "All pipeline tests passed successfully."